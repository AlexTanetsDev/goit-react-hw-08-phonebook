{"version":3,"file":"static/js/504.bd603663.chunk.js","mappings":"sNAGaA,EAAc,WACvB,OACI,UAAC,KAAD,YAEI,UAAC,KAAD,YACI,SAAC,KAAD,yCACA,UAAC,KAAD,4CAA0C,kBAA1C,yBAEJ,UAAC,KAAD,YACI,SAAC,MAAD,CAAYC,MAAM,YAAYC,KAAM,MACpC,SAAC,MAAD,CAAeD,MAAM,YAAYC,KAAM,MACvC,SAAC,MAAD,CAASD,MAAM,YAAYC,KAAM,MACjC,SAAC,MAAD,CAAYD,MAAM,YAAYC,KAAM,MACpC,SAAC,MAAD,CAAWD,MAAM,YAAYC,KAAM,SAGvC,UAAC,KAAD,YACI,SAAC,KAAD,CAAaC,GAAG,SAAhB,sBACA,SAAC,KAAD,CAAaA,GAAG,YAAhB,2BAMf,E,uCCXYC,EAAW,WACtB,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAc,WAClBD,GAAgBD,EACjB,EAED,OACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,yBACA,UAAC,KAAD,4CAC+B,kBAD/B,yBAKF,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,MAAD,CAAWL,MAAM,YAAYC,KAAM,MACnC,SAAC,KAAD,gDAGF,SAAC,KAAD,CAAeO,KAAK,SAASC,QAASF,EAAtC,4BAIDF,IAAe,SAACK,EAAA,EAAD,CAAOC,WAAYJ,MAGxC,E,oBCxCc,SAASK,IACpB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAG/B,OACI,8BACOF,GAAiC,SAACV,EAAD,KAAnB,SAACJ,EAAD,KAM5B,C,uPCdYiB,EAAiBC,EAAAA,GAAAA,IAAH,2VAmBdC,EAAWD,EAAAA,GAAAA,IAAH,kOAYRE,EAAgBF,EAAAA,GAAAA,GAAH,4CAIbG,EAAcH,EAAAA,GAAAA,EAAH,kIAQXI,EAAiBJ,EAAAA,GAAAA,IAAH,2GAOdK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2UAkBXO,EAAUP,EAAAA,GAAAA,IAAH,uD,wLCrEPQ,EAAeR,EAAAA,GAAAA,EAAH,wFAMZS,EAAgBT,EAAAA,GAAAA,OAAH,8WAoBbU,EAAmBV,EAAAA,GAAAA,IAAH,uOAYhBW,EAAgBX,EAAAA,GAAAA,IAAH,0JASbY,EAAqBZ,EAAAA,GAAAA,IAAH,qG,oGC9ClBa,GAAeb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,sNAaZe,EAAYf,EAAAA,GAAAA,MAAH,sIASTgB,GAAchB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,kHAQXkB,EAAclB,EAAAA,GAAAA,OAAF,8Y,wCCtBnBmB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,OAAQJ,EAAAA,KAAaG,WAAWE,WAAWC,YAGvCC,EAAgB,CACpBL,KAAM,GACNE,OAAQ,IAGGI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBZ,EAClBa,SARiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAWF,IACpBC,GACD,EAEC,UAKE,UAACrB,EAAD,CAAcuB,aAAa,MAA3B,WACE,UAACrB,EAAD,CAAWsB,QAAQ,OAAnB,kBAEE,SAACrB,EAAD,CAAazB,KAAK,OAAO+B,KAAK,OAAOgB,YAAY,kBACjD,SAAC,KAAD,CAAchB,KAAK,OAAOiB,UAAU,YAGtC,UAACxB,EAAD,CAAWsB,QAAQ,SAAnB,oBAEE,SAACrB,EAAD,CAAazB,KAAK,MAAM+B,KAAK,SAASgB,YAAY,kBAClD,SAAC,KAAD,CAAchB,KAAK,SAASiB,UAAU,YAExC,SAACrB,EAAD,CAAc3B,KAAK,SAAnB,6BAIP,E,8BChDYiD,EAAUxC,EAAAA,GAAAA,IAAH,uOAYPyC,EAAgBzC,EAAAA,GAAAA,OAAH,+Y,oBCGpB0C,EAAYC,SAASC,cAAc,eAE5BnD,EAAQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,YACtBmD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MACJtD,GAEH,EAID,OAFAuD,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACpD,IAOJ,OAAO0D,EAAAA,EAAAA,eACL,SAACZ,EAAD,CAAShD,QANS,SAAAuD,GACE,YAAhBA,EAAEM,OAAOC,IACb5D,GACD,EAGgC4D,GAAG,UAAlC,UACE,UAAC,KAAD,YACE,SAACb,EAAD,CAAelD,KAAK,SAASC,QAASE,EAAtC,UACE,SAAC,MAAD,CAAOV,KAAM,QAEf,SAAC4C,EAAD,KACA,UAAC,KAAD,YACE,SAAC,MAAD,CAAY7C,MAAM,YAAYC,KAAM,MACpC,SAAC,MAAD,CAAeD,MAAM,YAAYC,KAAM,MACvC,SAAC,MAAD,CAASD,MAAM,YAAYC,KAAM,MACjC,SAAC,MAAD,CAAYD,MAAM,YAAYC,KAAM,MACpC,SAAC,MAAD,CAAWD,MAAM,YAAYC,KAAM,aAIzC0D,EAEH,C","sources":["components/GreetingBox/GreetingBox.jsx","components/HomeView/HomeView.jsx","Pages/Home.jsx","components/GreetingBox/GreetingBox.styled.jsx","components/HomeView/HomeView.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx"],"sourcesContent":["import { FaTelegram, FaCommentDots, FaEnvelope, FaPhone, FaUserAlt } from \"react-icons/fa\";\nimport { GreetingBtn, GreetingBtnBox, GreetingTag, GreetingTitle, GreetingWraper, IconBox, TitleBox } from \"./GreetingBox.styled\"\n\nexport const GreetingBox = () => {\n    return (\n        <GreetingWraper>\n             \n            <TitleBox>\n                <GreetingTitle>Welcome to the Phonebook!</GreetingTitle>\n                <GreetingTag>All your contacts in one app <br /> on any device!</GreetingTag>\n            </TitleBox>\n            <IconBox>\n                <FaEnvelope color=\"#000000b9\" size={25}/>\n                <FaCommentDots color=\"#000000b9\" size={25}/>\n                <FaPhone color=\"#000000b9\" size={25}/>\n                <FaTelegram color=\"#000000b9\" size={25}/>\n                <FaUserAlt color=\"#000000b9\" size={25}/>\n            </IconBox>\n            \n            <GreetingBtnBox>\n                <GreetingBtn to='/login'>Sing in</GreetingBtn>\n                <GreetingBtn to='/register'>Register</GreetingBtn>\n            </GreetingBtnBox>\n           \n\n        </GreetingWraper>\n    );\n};","import {\n  GreetingTag,\n  GreetingTitle,\n  GreetingWraper,\n} from 'components/GreetingBox/GreetingBox.styled';\nimport {\n  AddContactBox,\n  AddContactBtn,\n  ContactInfoWrapper,\n  ContactsInfo,\n  HomeViewTitleBox,\n} from './HomeView.styled';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const HomeView = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <GreetingWraper>\n      <HomeViewTitleBox>\n        <GreetingTitle>Phonebook</GreetingTitle>\n        <GreetingTag>\n          All your contacts in one app <br /> on any device!\n        </GreetingTag>\n      </HomeViewTitleBox>\n\n      <AddContactBox>\n        <ContactInfoWrapper>\n          <FaUserAlt color=\"#000000b9\" size={50} />\n          <ContactsInfo>You can add new contacts here</ContactsInfo>\n        </ContactInfoWrapper>\n\n        <AddContactBtn type=\"button\" onClick={toggleModal}>\n          Add contact\n        </AddContactBtn>\n      </AddContactBox>\n      {isModalOpen && <Modal modalClose={toggleModal} />}\n    </GreetingWraper>\n  );\n};\n","import { GreetingBox } from \"components/GreetingBox/GreetingBox\";\nimport { HomeView } from \"components/HomeView/HomeView\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from \"Redux/auth/selectors\";\n\nexport default function Home() {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n   \n\n    return (\n        <>\n            { !isLoggedIn ? (<GreetingBox/>) : (<HomeView/>)} \n        </>\n       \n       \n    );\n    \n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GreetingWraper = styled.div`\n  position: relative;\n\n  max-width: 500px;\n  min-height: 350px;\n  background-color: #e0e0e0;\n\n  margin: 35px auto;\n  margin-top: 75px;\n  padding: 30px 15px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n\n  background-color: #fff;\n  padding: 15px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const GreetingTitle = styled.h2`\n  font-size: 32px;\n`;\n\nexport const GreetingTag = styled.p`\n  font-size: 26px;\n  font-style: italic;\n  font-weight: 600;\n  color: #2c3fe4;\n  text-align: center;\n`;\n\nexport const GreetingBtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const GreetingBtn = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const IconBox = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactsInfo = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const AddContactBtn = styled.button`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const HomeViewTitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n\n  background-color: #fff;\n  padding: 15px 40px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const AddContactBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  padding-left: 25px;\n  padding-right: 25px;\n`;\n\nexport const ContactInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  max-width: 300px;\n`;\n","import styled from \"styled-components\";\nimport {Field, Form} from \"formik\"\n\nexport const ContactsForm = styled(Form)`\n\ndisplay: flex;\nflex-direction: column;\nbackground-color: #fff;\npadding: 15px;\ngap: 15px;\nalign-items: center;\n\n border-radius: 15px;\n box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const FormLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap:5px;\n\n    font-size: 24px;\n    font-weight: 500;\n`;\n\nexport const StyledField = styled(Field)`\nborder: 1.5px solid black;\nborder-radius: 15px;\noutline: none;\npadding: 2px 10px;\n\n\n`\nexport const SubmitButton= styled.button`\n       text-decoration: none;\n    text-align: center;\n    color: #ffffff;\n    font-weight: 700;\n    font-size: 24px;\n    background-color: #60b8ff;\n    padding: 5px;\n    width: 250px;\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n    :hover,:focus{\n        background-color: #ec4d1c;\n    }\n\n`","import { Formik, ErrorMessage } from 'formik';\nimport {\n  ContactsForm,\n  FormLabel,\n  StyledField,\n  SubmitButton,\n} from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'Redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive().integer(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const hendleSubmit = (values, { resetForm }) => {\n    dispatch(addContact(values));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <ContactsForm autoComplete=\"off\">\n        <FormLabel htmlFor=\"name\">\n          Name\n          <StyledField type=\"text\" name=\"name\" placeholder=\"Contact Name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </FormLabel>\n\n        <FormLabel htmlFor=\"number\">\n          Number\n          <StyledField type=\"tel\" name=\"number\" placeholder=\"011 22 33 44\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </FormLabel>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </ContactsForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalCloseBtn = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #60b8ff;\n    color: #fff;\n  }\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  GreetingWraper,\n  IconBox,\n} from 'components/GreetingBox/GreetingBox.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalCloseBtn, Overlay } from './Modal.styled';\nimport {\n  FaTelegram,\n  FaCommentDots,\n  FaEnvelope,\n  FaPhone,\n  FaUserAlt,\n} from 'react-icons/fa';\nimport { BsXLg } from 'react-icons/bs';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ modalClose }) => {\n  useEffect(() => {\n    const hendleKeydown = e => {\n      if (e.code === 'Escape') {\n        modalClose();\n      }\n    };\n\n    window.addEventListener('keydown', hendleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', hendleKeydown);\n    };\n  }, [modalClose]);\n\n  const handleClick = e => {\n    if (e.target.id !== 'overlay') return;\n    modalClose();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleClick} id=\"overlay\">\n      <GreetingWraper>\n        <ModalCloseBtn type=\"button\" onClick={modalClose}>\n          <BsXLg size={30} />\n        </ModalCloseBtn>\n        <ContactForm />\n        <IconBox>\n          <FaEnvelope color=\"#000000b9\" size={25} />\n          <FaCommentDots color=\"#000000b9\" size={25} />\n          <FaPhone color=\"#000000b9\" size={25} />\n          <FaTelegram color=\"#000000b9\" size={25} />\n          <FaUserAlt color=\"#000000b9\" size={25} />\n        </IconBox>\n      </GreetingWraper>\n    </Overlay>,\n    modalRoot\n  );\n};\n"],"names":["GreetingBox","color","size","to","HomeView","useState","isModalOpen","setIsModalOpen","toggleModal","type","onClick","Modal","modalClose","Home","isLoggedIn","useSelector","selectIsLoggedIn","GreetingWraper","styled","TitleBox","GreetingTitle","GreetingTag","GreetingBtnBox","GreetingBtn","NavLink","IconBox","ContactsInfo","AddContactBtn","HomeViewTitleBox","AddContactBox","ContactInfoWrapper","ContactsForm","Form","FormLabel","StyledField","Field","SubmitButton","schema","yup","shape","name","required","number","positive","integer","initialValues","ContactForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","addContact","autoComplete","htmlFor","placeholder","component","Overlay","ModalCloseBtn","modalRoot","document","querySelector","useEffect","hendleKeydown","e","code","window","addEventListener","removeEventListener","createPortal","target","id"],"sourceRoot":""}