{"version":3,"file":"static/js/760.e5f47014.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","Pages/Contacts.jsx","components/GreetingBox/GreetingBox.styled.jsx","components/HomeView/HomeView.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsloading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  border: 1.5px solid black;\n  border-radius: 15px;\n  outline: none;\n  padding: 2px 10px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/filterSlice';\nimport { useState } from 'react';\nimport { FilterLabel, StyledInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [filterValue, setFilterValue] = useState('');\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n    setFilterValue(value);\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <StyledInput\n        type=\"text\"\n        value={filterValue}\n        onChange={handleFilterChange}\n        placeholder=\"Contact Name\"\n      />\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  min-width: 400px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #fff;\n  border-radius: 15px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 5px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: #e0e0e0;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const Contact = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const DeleteContactBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n    color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Contact,\n  ContactItem,\n  DeleteContactBtn,\n  List,\n} from './ContactList.styled';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { selectFilter } from 'Redux/filterSlice';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport { FaUsersSlash } from 'react-icons/fa';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleClick = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <List>\n      {getVisibleContacts().map(visibleContact => {\n        const { id, name, number } = visibleContact;\n        return (\n          <ContactItem key={id}>\n            <Contact>\n              {name.toUpperCase()} : {number}\n            </Contact>\n            <DeleteContactBtn type=\"button\" onClick={() => handleClick(id)}>\n              <FaUsersSlash />\n            </DeleteContactBtn>\n          </ContactItem>\n        );\n      })}\n    </List>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectContacts,\n  selectIsloading,\n  selectError,\n} from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { GreetingWraper } from 'components/GreetingBox/GreetingBox.styled';\nimport { AddContactBtn } from 'components/HomeView/HomeView.styled';\nimport { Modal } from 'components/Modal/Modal';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsloading);\n  const error = useSelector(selectError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <GreetingWraper>\n      <h1>Phonebook</h1>\n      <AddContactBtn type=\"button\" onClick={toggleModal}>\n        Add contact\n      </AddContactBtn>\n      {isModalOpen && <Modal modalClose={toggleModal} />}\n      <h2>\n        {contacts.length === 0\n          ? 'Here will be your contacts. Add contacts'\n          : 'Contacts'}\n      </h2>\n      {contacts.length > 1 && <Filter />}\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length !== 0 && <ContactList />}\n    </GreetingWraper>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GreetingWraper = styled.div`\n  position: relative;\n\n  max-width: 500px;\n  min-height: 350px;\n  background-color: #e0e0e0;\n\n  margin: 35px auto;\n  margin-top: 75px;\n  padding: 30px 15px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n\n  background-color: #fff;\n  padding: 15px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const GreetingTitle = styled.h2`\n  font-size: 32px;\n`;\n\nexport const GreetingTag = styled.p`\n  font-size: 26px;\n  font-style: italic;\n  font-weight: 600;\n  color: #2c3fe4;\n  text-align: center;\n`;\n\nexport const GreetingBtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const GreetingBtn = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const IconBox = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactsInfo = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const AddContactBtn = styled.button`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const HomeViewTitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n\n  background-color: #fff;\n  padding: 15px 40px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const AddContactBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  padding-left: 25px;\n  padding-right: 25px;\n`;\n\nexport const ContactInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  max-width: 300px;\n`;\n","import styled from \"styled-components\";\nimport {Field, Form} from \"formik\"\n\nexport const ContactsForm = styled(Form)`\n\ndisplay: flex;\nflex-direction: column;\nbackground-color: #fff;\npadding: 15px;\ngap: 15px;\nalign-items: center;\n\n border-radius: 15px;\n box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const FormLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap:5px;\n\n    font-size: 24px;\n    font-weight: 500;\n`;\n\nexport const StyledField = styled(Field)`\nborder: 1.5px solid black;\nborder-radius: 15px;\noutline: none;\npadding: 2px 10px;\n\n\n`\nexport const SubmitButton= styled.button`\n       text-decoration: none;\n    text-align: center;\n    color: #ffffff;\n    font-weight: 700;\n    font-size: 24px;\n    background-color: #60b8ff;\n    padding: 5px;\n    width: 250px;\n    border-radius: 15px;\n    border: none;\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n    :hover,:focus{\n        background-color: #ec4d1c;\n    }\n\n`","import { Formik, ErrorMessage } from 'formik';\nimport {\n  ContactsForm,\n  FormLabel,\n  StyledField,\n  SubmitButton,\n} from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'Redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive().integer(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const hendleSubmit = (values, { resetForm }) => {\n    dispatch(addContact(values));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={hendleSubmit}\n    >\n      <ContactsForm autoComplete=\"off\">\n        <FormLabel htmlFor=\"name\">\n          Name\n          <StyledField type=\"text\" name=\"name\" placeholder=\"Contact Name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </FormLabel>\n\n        <FormLabel htmlFor=\"number\">\n          Number\n          <StyledField type=\"tel\" name=\"number\" placeholder=\"011 22 33 44\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </FormLabel>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </ContactsForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalCloseBtn = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #60b8ff;\n    color: #fff;\n  }\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  GreetingWraper,\n  IconBox,\n} from 'components/GreetingBox/GreetingBox.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalCloseBtn, Overlay } from './Modal.styled';\nimport {\n  FaTelegram,\n  FaCommentDots,\n  FaEnvelope,\n  FaPhone,\n  FaUserAlt,\n} from 'react-icons/fa';\nimport { BsXLg } from 'react-icons/bs';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ modalClose }) => {\n  useEffect(() => {\n    const hendleKeydown = e => {\n      if (e.code === 'Escape') {\n        modalClose();\n      }\n    };\n\n    window.addEventListener('keydown', hendleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', hendleKeydown);\n    };\n  }, [modalClose]);\n\n  const handleClick = e => {\n    if (e.target.id !== 'overlay') return;\n    modalClose();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleClick} id=\"overlay\">\n      <GreetingWraper>\n        <ModalCloseBtn type=\"button\" onClick={modalClose}>\n          <BsXLg size={30} />\n        </ModalCloseBtn>\n        <ContactForm />\n        <IconBox>\n          <FaEnvelope color=\"#000000b9\" size={25} />\n          <FaCommentDots color=\"#000000b9\" size={25} />\n          <FaPhone color=\"#000000b9\" size={25} />\n          <FaTelegram color=\"#000000b9\" size={25} />\n          <FaUserAlt color=\"#000000b9\" size={25} />\n        </IconBox>\n      </GreetingWraper>\n    </Overlay>,\n    modalRoot\n  );\n};\n"],"names":["selectContacts","state","contacts","items","selectIsloading","isLoading","selectError","error","StyledInput","styled","FilterLabel","Filter","dispatch","useDispatch","useState","filterValue","setFilterValue","type","value","onChange","e","target","setFilter","placeholder","List","ContactItem","Contact","DeleteContactBtn","ContactList","useSelector","filter","selectFilter","contact","name","toLowerCase","includes","map","visibleContact","id","number","toUpperCase","onClick","deleteContact","handleClick","Contacts","isModalOpen","setIsModalOpen","useEffect","fetchContacts","toggleModal","Modal","modalClose","length","GreetingWraper","TitleBox","GreetingTitle","GreetingTag","GreetingBtnBox","GreetingBtn","NavLink","IconBox","ContactsInfo","AddContactBtn","HomeViewTitleBox","AddContactBox","ContactInfoWrapper","ContactsForm","Form","FormLabel","StyledField","Field","SubmitButton","schema","yup","shape","required","positive","integer","initialValues","ContactForm","validationSchema","onSubmit","values","resetForm","addContact","autoComplete","htmlFor","component","Overlay","ModalCloseBtn","modalRoot","document","querySelector","hendleKeydown","code","window","addEventListener","removeEventListener","createPortal","size","color"],"sourceRoot":""}